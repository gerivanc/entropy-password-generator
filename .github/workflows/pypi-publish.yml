# This workflow uploads the EntroPy Password Generator package to PyPI when a release is created.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Publish EntroPy Password Generator to PyPI

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Validate version consistency
      run: |
        python -c "
        import toml
        with open('pyproject.toml', 'r') as f:
            pyproject_version = toml.load(f)['project']['version']
        with open('entropy_password_generator/__init__.py', 'r') as f:
            init_content = f.read()
            init_version = next(line.split('=')[1].strip().strip('\"') for line in init_content.splitlines() if line.startswith('__version__'))
        if pyproject_version != init_version:
            raise ValueError(f'Version mismatch: pyproject.toml ({pyproject_version}) != __init__.py ({init_version})')
        print('Version consistency validated:', pyproject_version)
        "

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Publish to Test PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
      run: |
        twine upload --repository testpypi dist/*

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload dist/*
