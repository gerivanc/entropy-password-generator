# This workflow uploads the EntroPy Password Generator package to PyPI when a release is created.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Publish EntroPy Password Generator to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read
  actions: read  # Ensure access to GitHub Actions

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - name: Debug event context
        run: |
          # Print event details to debug the release context
          echo "Event name: ${{ github.event_name }}"
          echo "Release tag: ${{ github.event.release.tag_name }}"
          echo "Repository: ${{ github.repository }}"

      - name: Checkout code manually
        run: |
          # Manually clone the repository using the GitHub token
          git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} .
          git checkout ${{ github.event.release.tag_name }}

      - name: Debug working directory
        run: |
          # Print current directory and list files for debugging
          pwd
          ls -R

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Verify Python version
        run: |
          # Confirm Python version and available versions
          python --version
          python3 --version || true
          ls -l /usr/bin/python*

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
          # Verify that build is installed
          python -m pip show build

      - name: Ensure package structure
        run: |
          # Ensure the __init__.py file exists to mark entropy_password_generator as a package
          touch entropy_password_generator/__init__.py

      - name: Build release distributions
        run: |
          python -m build

      - name: Verify build output
        run: |
          # Check if dist/ directory contains the expected files
          ls -l dist/

      - name: Test built package
        run: |
          # Install the built package locally and test it
          pip install dist/*.whl
          python -m entropy_password_generator.password_generator --length 15

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/project/entropy-password-generator/

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Verify downloaded artifacts
        run: |
          # Check if dist/ directory contains the expected files
          ls -l dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages_dir: dist/
